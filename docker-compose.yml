version: '3'

services:

  collector:
    build:
      context: ./services/collector
      dockerfile: ./collector.dockerfile
    restart: always
    ports:
      - "3000:3000"

  broker:
    build:
      context: ./services/broker
      dockerfile: ./broker.dockerfile
    restart: always
    ports:
      - "3001:3001"
    deploy:
      mode: replicated
      replicas: 1

  logger:
    build:
      context: ./services/logger
      dockerfile: ./logger.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  auth:
    build:
      context: ./services/auth
      dockerfile: ./auth.dockerfile
    restart: always
    ports:
      - "3002:3002"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  mailer:
    build:
      context: ./services/mailer
      dockerfile: ./mailer.dockerfile
    restart: always
    ports:
      - "3004:3004"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: none
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: ""
      MAIL_NAME: "John Smith"
      MAIL_ADDRESS: john.smith@example.com

  listener:
    build:
      context: ./services/listener
      dockerfile: ./listener.dockerfile
    deploy:
      mode: replicated
      replicas: 1

  statictv:
    build:
      context: ./services/statictv
      dockerfile: ./statictv.dockerfile
    restart: always
    ports:
      - "3006:3006"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      FILES_DIR: "/app/static"

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.9.14-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/